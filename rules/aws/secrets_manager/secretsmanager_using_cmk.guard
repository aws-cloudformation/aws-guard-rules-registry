#####################################
# Rule Identifier:
#    SECRETSMANAGER_USING_CMK
#
# Description:
#   Checks if all secrets in AWS Secrets Manager are encrypted using the AWS managed key (aws/secretsmanager) or a customer managed key that was created in AWS Key Management Service (AWS KMS).
#
# Reports on:
#    AWS::SecretsManager::Secret
#
# Evaluates:
#    AWS CloudFormation
#
# Rule Parameters:
#    NA
#
# Scenarios:
# a) SKIP: when there are no Secrets Manager Secret resources
# b) PASS: when all Secrets Manager Secrets have an associated customer managed CMK
# c) FAIL: when any Secrets Manager Secrets is missing an associated customer managed CMK
# d) SKIP: when metada has rule suppression for SECRETSMANAGER_USING_CMK

#
# Select all AWS::SageMaker::EndpointConfig resources from incoming template (payload)
#

###
# AWS::SecretsManager::Secret.guard rules
###

let aws_secretsmanager_secret = Resources.*[ Type == "AWS::SecretsManager::Secret"
  Metadata.guard.SuppressedRules not exists or
  Metadata.guard.SuppressedRules.* != "SECRETSMANAGER_USING_CMK"
]



rule aws_secretsmanager_secret_encrypted_kms_cmk when %aws_secretsmanager_secret !empty {
  %aws_secretsmanager_secret.PropertiesKmsKeyId exists
  %aws_secretsmanager_secret.PropertiesKmsKeyId.KmsKeyId not in ["alias/aws/secretsmanager"]
  <<
    Violation: Key Management Service (KMS) key needs to be configured for Amazon SageMaker endpoint configuration
    Fix: Set the property KmsKeyId.
  >>
}
