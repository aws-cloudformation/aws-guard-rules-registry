- input:
    Resources:
      MySecret:
        Type: 'AWS::SecretsManager::Secret'
        Properties:
          Name: MySecretForAppA
          Description: "This secret has a dynamically generated secret password."
          GenerateSecretString:
            SecretStringTemplate: '{"username": "test-user"}'
            GenerateStringKey: "password"
            PasswordLength: 30
            ExcludeCharacters: '"@/\'
          KmsKeyId:
            Ref: MyKMSKey
      MySecretRotationSchedule:
        Type: AWS::SecretsManager::RotationSchedule
        Properties:
          SecretId:
            Ref: MySecret
          RotationLambdaARN:
            Ref: MyCustomRotationLambda
          RotationRules:
            AutomaticallyAfterDays: 30
  expectations:
    rules:
      aws_secretsmanager_secret_has_rotation_schedule: PASS
      aws_secretsmanager_secret_encrypted_kms_cmk: PASS
      aws_secretsmanager_secret_no_hardcoded_secrets: PASS

- input:
    Resources:
      MySecret:
        Type: 'AWS::SecretsManager::Secret'
        Properties:
          Name: MySecretForAppA
          Description: "This secret has a dynamically generated secret password."
          GenerateSecretString:
            SecretStringTemplate: '{"username": "test-user"}'
            GenerateStringKey: "password"
            PasswordLength: 30
            ExcludeCharacters: '"@/\'
      MySecretRotationSchedule:
        Type: AWS::SecretsManager::RotationSchedule
        Properties:
          SecretId:
            Ref: MySecret
          RotationLambdaARN:
            Ref: MyCustomRotationLambda
          RotationRules:
            AutomaticallyAfterDays: 30
  expectations:
    rules:
      aws_secretsmanager_secret_encrypted_kms_cmk: FAIL

- input:
    Resources:
      MySecret:
        Type: 'AWS::SecretsManager::Secret'
        Properties:
          Name: MySecretForAppA
          Description: "This secret has a dynamically generated secret password."
          GenerateSecretString:
            SecretStringTemplate: '{"username": "test-user"}'
            GenerateStringKey: "password"
            PasswordLength: 30
            ExcludeCharacters: '"@/\'
          KmsKeyId: alias/aws/secretsmanager
      MySecretRotationSchedule:
        Type: AWS::SecretsManager::RotationSchedule
        Properties:
          SecretId:
            Ref: MySecret
          RotationLambdaARN:
            Ref: MyCustomRotationLambda
          RotationRules:
            AutomaticallyAfterDays: 30
  expectations:
    rules:
      aws_secretsmanager_secret_encrypted_kms_cmk: FAIL