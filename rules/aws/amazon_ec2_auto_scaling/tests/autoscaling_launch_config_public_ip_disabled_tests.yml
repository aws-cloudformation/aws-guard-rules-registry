###
# AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED tests
###
---
- name: Empty, SKIP
  input: {}
  expectations:
    rules:
      AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED: SKIP

- name: Scenario a) No resources, SKIP
  input:
    Resources: {}
  expectations:
    rules:
      AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED: SKIP

- name: Scenario b) AssociatePublicIpAddress not specified leaving it to subnet default but rule being suppressed, SKIP
  input:
    Resources:
      myLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Metadata:
          guard:
            SuppressedRules:
            - AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED
        Properties:
          ImageId: !Ref LatestAmiId
          SecurityGroups:
            - !Ref myEC2SecurityGroup
          InstanceType:
            !Ref InstanceType
          BlockDeviceMappings:
            - DeviceName: /dev/sda1
              Ebs:
                VolumeSize: '30'
                VolumeType: gp3
            - DeviceName: /dev/sdm
              Ebs:
                VolumeSize: '100'
                DeleteOnTermination: false
  expectations:
    rules:
      AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED: SKIP

- name: Scenario c) AssociatePublicIpAddress not set, FAIL
  input:
    Resources:
      myLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
          ImageId: !Ref LatestAmiId
          SecurityGroups:
            - !Ref myEC2SecurityGroup
          InstanceType:
            !Ref InstanceType
          BlockDeviceMappings:
            - DeviceName: /dev/sda1
              Ebs:
                VolumeSize: '30'
                VolumeType: gp3
            - DeviceName: /dev/sdm
              Ebs:
                VolumeSize: '100'
                DeleteOnTermination: false
  expectations:
    rules:
      AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED: FAIL

- name: Scenario d) AssociatePublicIpAddress set to true, FAIL
  input:
    Resources:
      myLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
          ImageId: !Ref LatestAmiId
          AssociatePublicIpAddress: true
          SecurityGroups:
            - !Ref myEC2SecurityGroup
          InstanceType:
            !Ref InstanceType
          BlockDeviceMappings:
            - DeviceName: /dev/sda1
              Ebs:
                VolumeSize: '30'
                VolumeType: gp3
            - DeviceName: /dev/sdm
              Ebs:
                VolumeSize: '100'
                DeleteOnTermination: false
  expectations:
    rules:
      AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED: FAIL

- name: Scenario e) AssociatePublicIpAddress set to false, PASS
  input:
    Resources:
      myLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
          ImageId: !Ref LatestAmiId
          AssociatePublicIpAddress: false
          SecurityGroups:
            - !Ref myEC2SecurityGroup
          InstanceType:
            !Ref InstanceType
          BlockDeviceMappings:
            - DeviceName: /dev/sda1
              Ebs:
                VolumeSize: '30'
                VolumeType: gp3
            - DeviceName: /dev/sdm
              Ebs:
                VolumeSize: '100'
                DeleteOnTermination: false
  expectations:
    rules:
      AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED: PASS