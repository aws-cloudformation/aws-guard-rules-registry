## Config Rule Name : aurora-mysql-backtracking-enabled
## Config Rule URL: https://docs.aws.amazon.com/config/latest/developerguide/aurora-mysql-backtracking-enabled.html

# Rule Intent: Checks if an Amazon Aurora MySQL cluster has backtracking enabled.

# Expectations:
# a) SKIP: when there are no RDS instances present
# b) PASS: when all aurora-mysql RDS instances have BacktrackWindow set to greater than 0
# c) FAIL: when all aurora-mysql RDS instances have BacktrackWindow set to 0
# d) FAIL: when there are aurora-mysql RDS instances with BacktrackWindow property is not present

#
# Select all RDS Clusters resources from incoming template (payload)
#

let aws_rds_clusters = Resources.*[ Type == 'AWS::RDS::DBCluster'  ]

rule AURORA_MYSQL_BACKTRACKING_ENABLED when %aws_rds_clusters !empty {
    # only eval aurora-mysql engine types
    when %aws_rds_clusters.Properties.Engine == 'aurora-mysql' {
      %aws_rds_clusters.Properties.BacktrackWindow EXISTS
      %aws_rds_clusters.Properties.BacktrackWindow >= 1
      <<All MySQL Aurora RDS DB Clusters backtrack enabled. Set BacktrackWindow parameter value to greater than 0 >>
    }
}
