#
#####################################
##          AWS Solutions          ##
#####################################
# Rule Identifier:
#   RDS_CLUSTER_MASTER_USER_PASSWORD_NO_PLAINTEXT_PASSWORD
#
# Description:
#  RDS Cluster DB instance master user password must not be a plaintext string or a Ref to a Parameter with a Default value.
#  Can be Ref to a NoEcho Parameter without a Default, or a dynamic reference to a secretsmanager/ssm-secure value.
#  with a Default value. Can be Ref to a NoEcho Parameter without a Default, or a dynamic reference to a secretsmanager value.
#
# Reports on:
#   AWS::RDS::DBCluster
#
# Evaluates:
#   AWS CloudFormation
#
# Rule Parameters:
#   NA
#
# CFN_NAG Rule Id:
#   F34
#
# Note: this rule works, however it sends the custom message twice for each resource
#
# Scenarios:
# a) SKIP: when there are no AWS::RDS::DBCluster present
# b) PASS: when all AWS::RDS::DBCluster use passwords from secure sources
# c) FAIL: when any AWS::RDS::DBCluster has a Password property not using a secure source
# d) SKIP: when metadata has rule suppression for RDS_CLUSTER_MASTER_USER_PASSWORD_NO_PLAINTEXT_PASSWORD or CFN_NAG F34

let rds_cluster_master_user_password_no_plaintext_password = Resources.*[ Type == 'AWS::RDS::DBCluster'
  Metadata.cfn_nag.rules_to_suppress not exists or
  Metadata.cfn_nag.rules_to_suppress.*.id != "F34"
  Metadata.guard.SuppressedRules not exists or
  Metadata.guard.SuppressedRules.* != "RDS_CLUSTER_MASTER_USER_PASSWORD_NO_PLAINTEXT_PASSWORD"
]

# Get any AWS::RDS::DBCluster Refs for Password?
let rds_cluster_master_user_password_refs = %rds_cluster_master_user_password_no_plaintext_password.Properties.MasterUserPassword.'!Ref'

# Rule 1: when rds cluster master user password no plaintext password have Ref to Parameter for Password
rule RDS_CLUSTER_MASTER_USER_PASSWORD_USES_SECURE_PARAMETER when
  %rds_cluster_master_user_password_no_plaintext_password not empty
{
  Parameters exists
  Parameters not empty
  %rds_cluster_master_user_password_refs not empty
  let parameter_refs = Parameters.%rds_cluster_master_user_password_refs
  when %parameter_refs !empty {
    %parameter_refs.Type == 'String'
    %parameter_refs.NoEcho exists
    %parameter_refs.NoEcho == true
    %parameter_refs.Default !exists
  }
}

# Rule 2: when rds cluster master user password no plaintext password and above rule did not pass
rule RDS_CLUSTER_MASTER_USER_PASSWORD_USES_SECURE_SERVICE when
  %rds_cluster_master_user_password_no_plaintext_password not empty
  !RDS_CLUSTER_MASTER_USER_PASSWORD_USES_SECURE_PARAMETER
{
  %rds_cluster_master_user_password_no_plaintext_password.Properties.MasterUserPassword !exists
  OR
  %rds_cluster_master_user_password_no_plaintext_password.Properties.MasterUserPassword in [ /{{resolve\:secretsmanager\:.*}}/, /{{resolve\:ssm-secure\:.*}}/ ]
  <<
    Violation: RDS Cluster MasterUserPassword password must not be a plaintext string or a Ref to a Parameter with a Default value. Can be Ref to a NoEcho Parameter without a Default, or a dynamic reference to a secretsmanager value.
    Fix: Replace plaintext value with a secure one.
  >>
}

# One rule to rule them all...
rule RDS_CLUSTER_MASTER_USER_PASSWORD_NO_PLAINTEXT_PASSWORD when
  %rds_cluster_master_user_password_no_plaintext_password not empty
{
  RDS_CLUSTER_MASTER_USER_PASSWORD_USES_SECURE_PARAMETER
  OR
  RDS_CLUSTER_MASTER_USER_PASSWORD_USES_SECURE_SERVICE
}
