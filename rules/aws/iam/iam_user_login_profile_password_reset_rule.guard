#
#####################################
##          AWS Solutions          ##
#####################################
# Rule Identifier:
#   IAM_USER_LOGIN_PROFILE_PASSWORD_RESET_RULE
#
# Description:
#   IAM User Login Profile should exist and have PasswordResetRequired property set to true.
#
# Reports on:
#   AWS::IAM::User
#
# Evaluates:
#   AWS CloudFormation
#
# Rule Parameters:
#   NA
#
# CFN_NAG Rule Id:
#   W50
#
# Scenarios:
# a) SKIP: when there are no IAM Users present
# b) PASS: when all IAM Users have Login Profile and have PasswordResetRequired property set to true.
# c) FAIL: when any IAM Users do not have Login Profile or have PasswordResetRequired property is not set to true.
# d) SKIP: when metadata has rule suppression for IAM_USER_LOGIN_PROFILE_PASSWORD_RESET_RULE or CFN_NAG W50

#
# Select all IAM User resources from incoming template (payload)
#
let iam_user_login_profile_password_reset_rule = Resources.*[ Type == 'AWS::IAM::User'
  Metadata.cfn_nag.rules_to_suppress not exists or
  Metadata.cfn_nag.rules_to_suppress.*.id != "W50"
  Metadata.guard.SuppressedRules not exists or
  Metadata.guard.SuppressedRules.* != "IAM_USER_LOGIN_PROFILE_PASSWORD_RESET_RULE"
]

rule IAM_USER_LOGIN_PROFILE_PASSWORD_RESET_RULE when %iam_user_login_profile_password_reset_rule !empty {
  let violations = %iam_user_login_profile_password_reset_rule[
    Type == 'AWS::IAM::User'
    Properties.LoginProfile !exists
    OR
    Properties.LoginProfile.PasswordResetRequired !exists
    OR
    Properties.LoginProfile.PasswordResetRequired == 'false'
    OR
    Properties.LoginProfile.PasswordResetRequired == false
  ]
  %violations empty
  <<
    Violation: IAM User Login Profile should exist and have PasswordResetRequired property set to true
    Fix: Create IAM User LoginProfile and make sure that PasswordResetRequired is set to true.
  >>
}
