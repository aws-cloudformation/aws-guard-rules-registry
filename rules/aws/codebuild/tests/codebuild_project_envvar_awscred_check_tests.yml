---
- input:
    Resources:
      MyCodeBuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
          Artifacts:
            Type: CODEPIPELINE
          Environment:
            ComputeType: BUILD_GENERAL1_SMALL
            Image: aws/codebuild/standard:5.0
            ImagePullCredentialsType: CODEBUILD
            PrivilegedMode: false
            Type: LINUX_CONTAINER
            EnvironmentVariables:
            - Name: MyEnvVar
              Type: PLAINTEXT
              Value: Tests
          ServiceRole:
            Fn::GetAtt:
              - MyPipelineBuildSynthRole
              - Arn
          Source:
            BuildSpec: |-
              {
                "version": "0.2",
                "phases": {
                  "pre_build": {
                    "commands": [
                      "cd cdk",
                      "git clone https://github.com/aws-samples/cloudfront-authorization-at-edge.git ../cloudfront-authorization-at-edge && npm install -g pnpm && pnpm set verify-store-integrity false && pnpm install"
                    ]
                  },
                  "build": {
                    "commands": [
                      "pnpm run builddeps",
                      "npx cdk synth"
                    ]
                  }
                },
                "artifacts": {
                  "base-directory": "cdk/cdk.out",
                  "files": "**/*"
                }
              }
            Type: CODEPIPELINE
          EncryptionKey:
            Fn::GetAtt:
              - MyPipelineArtefactEncryptionKey
              - Arn
  expectations:
    rules:
      aws_codebuild_project_env_variables_plaintext_creds: PASS

- input:
    Resources:
      MyCodeBuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
          Artifacts:
            Type: CODEPIPELINE
          Environment:
            ComputeType: BUILD_GENERAL1_SMALL
            Image: aws/codebuild/standard:5.0
            ImagePullCredentialsType: CODEBUILD
            PrivilegedMode: false
            Type: LINUX_CONTAINER
          ServiceRole:
            Fn::GetAtt:
              - MyPipelineBuildSynthRole
              - Arn
          Source:
            BuildSpec: |-
              {
                "version": "0.2",
                "phases": {
                  "pre_build": {
                    "commands": [
                      "cd cdk",
                      "git clone https://github.com/aws-samples/cloudfront-authorization-at-edge.git ../cloudfront-authorization-at-edge && npm install -g pnpm && pnpm set verify-store-integrity false && pnpm install"
                    ]
                  },
                  "build": {
                    "commands": [
                      "pnpm run builddeps",
                      "npx cdk synth"
                    ]
                  }
                },
                "artifacts": {
                  "base-directory": "cdk/cdk.out",
                  "files": "**/*"
                }
              }
            Type: CODEPIPELINE
          EncryptionKey:
            Fn::GetAtt:
              - MyPipelineArtefactEncryptionKey
              - Arn
  expectations:
    rules:
      aws_codebuild_project_env_variables_plaintext_creds: PASS

- input:
    Resources:
      MyCodeBuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
          Artifacts:
            Type: CODEPIPELINE
          Environment:
            ComputeType: BUILD_GENERAL1_SMALL
            Image: aws/codebuild/standard:5.0
            ImagePullCredentialsType: CODEBUILD
            PrivilegedMode: false
            Type: LINUX_CONTAINER
            EnvironmentVariables:
            - Name: AWS_ACCESS_KEY_ID
              Type: PLAINTEXT
              Value: Tests
          ServiceRole:
            Fn::GetAtt:
              - MyPipelineBuildSynthRole
              - Arn
          Source:
            BuildSpec: |-
              {
                "version": "0.2",
                "phases": {
                  "pre_build": {
                    "commands": [
                      "cd cdk",
                      "git clone https://github.com/aws-samples/cloudfront-authorization-at-edge.git ../cloudfront-authorization-at-edge && npm install -g pnpm && pnpm set verify-store-integrity false && pnpm install"
                    ]
                  },
                  "build": {
                    "commands": [
                      "pnpm run builddeps",
                      "npx cdk synth"
                    ]
                  }
                },
                "artifacts": {
                  "base-directory": "cdk/cdk.out",
                  "files": "**/*"
                }
              }
            Type: CODEPIPELINE
          EncryptionKey:
            Fn::GetAtt:
              - MyPipelineArtefactEncryptionKey
              - Arn
  expectations:
    rules:
      aws_codebuild_project_env_variables_plaintext_creds: FAIL

- input:
    Resources:
      MyCodeBuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
          Artifacts:
            Type: CODEPIPELINE
          Environment:
            ComputeType: BUILD_GENERAL1_SMALL
            Image: aws/codebuild/standard:5.0
            ImagePullCredentialsType: CODEBUILD
            PrivilegedMode: false
            Type: LINUX_CONTAINER
            EnvironmentVariables:
            - Name: AWS_SECRET_ACCESS_KEY
              Type: PLAINTEXT
              Value: Tests
          ServiceRole:
            Fn::GetAtt:
              - MyPipelineBuildSynthRole
              - Arn
          Source:
            BuildSpec: |-
              {
                "version": "0.2",
                "phases": {
                  "pre_build": {
                    "commands": [
                      "cd cdk",
                      "git clone https://github.com/aws-samples/cloudfront-authorization-at-edge.git ../cloudfront-authorization-at-edge && npm install -g pnpm && pnpm set verify-store-integrity false && pnpm install"
                    ]
                  },
                  "build": {
                    "commands": [
                      "pnpm run builddeps",
                      "npx cdk synth"
                    ]
                  }
                },
                "artifacts": {
                  "base-directory": "cdk/cdk.out",
                  "files": "**/*"
                }
              }
            Type: CODEPIPELINE
          EncryptionKey:
            Fn::GetAtt:
              - MyPipelineArtefactEncryptionKey
              - Arn
  expectations:
    rules:
      aws_codebuild_project_env_variables_plaintext_creds: FAIL

- input:
    Resources:
      MyCodeBuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
          Artifacts:
            Type: CODEPIPELINE
          Environment:
            ComputeType: BUILD_GENERAL1_SMALL
            Image: aws/codebuild/standard:5.0
            ImagePullCredentialsType: CODEBUILD
            PrivilegedMode: false
            Type: LINUX_CONTAINER
            EnvironmentVariables:
            - Name: PASSWORD
              Type: PLAINTEXT
              Value: Tests
          ServiceRole:
            Fn::GetAtt:
              - MyPipelineBuildSynthRole
              - Arn
          Source:
            BuildSpec: |-
              {
                "version": "0.2",
                "phases": {
                  "pre_build": {
                    "commands": [
                      "cd cdk",
                      "git clone https://github.com/aws-samples/cloudfront-authorization-at-edge.git ../cloudfront-authorization-at-edge && npm install -g pnpm && pnpm set verify-store-integrity false && pnpm install"
                    ]
                  },
                  "build": {
                    "commands": [
                      "pnpm run builddeps",
                      "npx cdk synth"
                    ]
                  }
                },
                "artifacts": {
                  "base-directory": "cdk/cdk.out",
                  "files": "**/*"
                }
              }
            Type: CODEPIPELINE
          EncryptionKey:
            Fn::GetAtt:
              - MyPipelineArtefactEncryptionKey
              - Arn
  expectations:
    rules:
      aws_codebuild_project_env_variables_plaintext_creds: FAIL

- input:
    Resources:
      MyCodeBuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
          Artifacts:
            Type: CODEPIPELINE
          Environment:
            ComputeType: BUILD_GENERAL1_SMALL
            Image: aws/codebuild/standard:5.0
            ImagePullCredentialsType: CODEBUILD
            PrivilegedMode: false
            Type: LINUX_CONTAINER
            EnvironmentVariables:
            - Name: password
              Type: PLAINTEXT
              Value: Tests
          ServiceRole:
            Fn::GetAtt:
              - MyPipelineBuildSynthRole
              - Arn
          Source:
            BuildSpec: |-
              {
                "version": "0.2",
                "phases": {
                  "pre_build": {
                    "commands": [
                      "cd cdk",
                      "git clone https://github.com/aws-samples/cloudfront-authorization-at-edge.git ../cloudfront-authorization-at-edge && npm install -g pnpm && pnpm set verify-store-integrity false && pnpm install"
                    ]
                  },
                  "build": {
                    "commands": [
                      "pnpm run builddeps",
                      "npx cdk synth"
                    ]
                  }
                },
                "artifacts": {
                  "base-directory": "cdk/cdk.out",
                  "files": "**/*"
                }
              }
            Type: CODEPIPELINE
          EncryptionKey:
            Fn::GetAtt:
              - MyPipelineArtefactEncryptionKey
              - Arn
  expectations:
    rules:
      aws_codebuild_project_env_variables_plaintext_creds: FAIL