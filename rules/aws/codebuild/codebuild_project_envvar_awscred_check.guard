#
# Rule Identifier:
#    CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK
#
# Description:
#   Checks whether the project contains environment variables AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
#
# Reports on:
#    AWS::CodeBuild::Project
#
# Evaluates:
#    AWS CloudFormation
#
# Rule Parameters:
#    NA
#
# Scenarios:
# a) SKIP: when there are no AWS::CodeBuild::Project resources
# b) PASS: when environment variables AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY is not present
# c) FAIL: environment variables AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY is present
# d) SKIP: when metada has rule suppression for CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK

#
# Select all Code Build resources from incoming template (payload)
#
let codebuild_projects = Resources.*[ Type == "AWS::CodeBuild::Project"
  Metadata.guard.SuppressedRules not exists or
  Metadata.guard.SuppressedRules.* != "CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK"
]
let disallowed_names = ["AWS_ACCESS_KEY_ID", "AWS_SECRET_ACCESS_KEY"]

rule CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK when %codebuild_projects !empty {
	%codebuild_projects {
		Properties {
			Environment !exists OR
			Environment exists
			when Environment exists {
				Environment {
					EnvironmentVariables !exists OR
					EnvironmentVariables exists
					when EnvironmentVariables exists {
						EnvironmentVariables.* {
							Type != "PLAINTEXT" OR
							Type == "PLAINTEXT"
							when Type == "PLAINTEXT" {
								Name NOT IN %disallowed_names
								<<
									Violation: AWS Credential check in env var
									Fix: Remove sensitive credentials ("AWS_ACCESS_KEY_ID", "AWS_SECRET_ACCESS_KEY") from codebuild project envvar
								>>
							}
						}
					}
				}
			}
		}
	}
}
