###
# EC2_NETWORK_ACL_PORT_RANGE_RULE tests
###
---
- name: Empty
  input: {}
  expectations:
    rules:
      EC2_NETWORK_ACL_PORT_RANGE_RULE: SKIP

- name: No resources
  input:
    Resources: {}
  expectations:
    rules:
      EC2_NETWORK_ACL_PORT_RANGE_RULE: SKIP

- name: Using Protocol 1 for EC2 NetworkACLEntry
  input:
    Resources:
      InboundRule:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
           NetworkAclId:
             Ref: MyNACL
           RuleNumber: 100
           Protocol: 1
           RuleAction: allow
           CidrBlock: 172.16.0.0/24
           PortRange:
             From: 0
             To: 65535
  expectations:
    rules:
      EC2_NETWORK_ACL_PORT_RANGE_RULE: PASS

- name: Using Protocol 6 with range of ports
  input:
    Resources:
      OutboundRule:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
           NetworkAclId:
             Ref: MyNACL
           RuleNumber: 100
           Protocol: 6
           Egress: true
           Ipv6CidrBlock: !Ref myVPCIpv6CidrBlock
           RuleAction: allow
           CidrBlock: 0.0.0.0/0
           Icmp:
             Code: "0"
             Type: "0"
           PortRange:
             From: 0
             To: 22
  expectations:
    rules:
      EC2_NETWORK_ACL_PORT_RANGE_RULE: PASS

- name: Using Protocols 17 and portRange does not exist
  input:
    Resources:
      InboundRule:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
           NetworkAclId:
             Ref: MyNACL
           RuleNumber: 100
           Protocol: 17
           RuleAction: allow
           CidrBlock: 172.16.0.0/24
  expectations:
    rules:
      EC2_NETWORK_ACL_PORT_RANGE_RULE: FAIL

- name: Using Protocol 6 with full port range
  input:
    Resources:
      OutboundRule:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
           NetworkAclId:
             Ref: MyNACL
           RuleNumber: 100
           Protocol: 6
           Egress: true
           RuleAction: allow
           CidrBlock: 0.0.0.0/0
           Icmp:
             Code: "0"
             Type: "0"
           PortRange:
             From: 0
             To: 65535
  expectations:
    rules:
      EC2_NETWORK_ACL_PORT_RANGE_RULE: FAIL

- name: CFN_NAG suppression for W67
  input:
    Resources:
      MyNACL:
        Type: AWS::EC2::NetworkAcl
        Properties:
          VpcId: vpc-1122334455aabbccd
          Tags:
            - Key: Name
              Value: NACLforSSHTraffic
      InboundRule:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
          NetworkAclId:
            Ref: MyNACL
          RuleNumber: 100
          Protocol: -1
          RuleAction: allow
          CidrBlock: 172.16.0.0/24
          PortRange:
            From: 22
            To: 22
        Metadata:
          cfn_nag:
            rules_to_suppress:
              - id: W67
                reason: Suppressed to test suppression works and skips this test
      OutboundRule:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
          NetworkAclId:
            Ref: MyNACL
          RuleNumber: 100
          Protocol: 58
          Egress: true
          RuleAction: allow
          CidrBlock: 0.0.0.0/0
          Icmp:
            Code: "0"
            Type: "0"
        Metadata:
          cfn_nag:
            rules_to_suppress:
              - id: W67
                reason: Suppressed to test suppression works and skips this test
  expectations:
    rules:
      EC2_NETWORK_ACL_PORT_RANGE_RULE: SKIP

- name: Guard suppression for EC2_NETWORK_ACL_PORT_RANGE_RULE
  input:
    Resources:
      MyNACL:
        Type: AWS::EC2::NetworkAcl
        Properties:
           VpcId: vpc-1122334455aabbccd
           Tags:
           - Key: Name
             Value: NACLforSSHTraffic
      InboundRule:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
           NetworkAclId:
             Ref: MyNACL
           RuleNumber: 100
           Protocol: -1
           RuleAction: allow
           CidrBlock: 172.16.0.0/24
           PortRange:
             From: 22
             To: 22
        Metadata:
          guard:
            SuppressedRules:
              - EC2_NETWORK_ACL_PORT_RANGE_RULE
      OutboundRule:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
           NetworkAclId:
             Ref: MyNACL
           RuleNumber: 100
           Protocol: 58
           Egress: true
           RuleAction: allow
           CidrBlock: 0.0.0.0/0
           Icmp:
             Code: "0"
             Type: "0"
        Metadata:
          guard:
            SuppressedRules:
              - EC2_NETWORK_ACL_PORT_RANGE_RULE
  expectations:
    rules:
      EC2_NETWORK_ACL_PORT_RANGE_RULE: SKIP

- name: Guard and CFN_NAG suppression for W67 & EC2_NETWORK_ACL_PORT_RANGE_RULE
  input:
    Resources:
      MyNACL:
        Type: AWS::EC2::NetworkAcl
        Properties:
           VpcId: vpc-1122334455aabbccd
           Tags:
           - Key: Name
             Value: NACLforSSHTraffic
      InboundRule:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
           NetworkAclId:
             Ref: MyNACL
           RuleNumber: 100
           Protocol: -1
           RuleAction: allow
           CidrBlock: 172.16.0.0/24
           PortRange:
             From: 22
             To: 22
        Metadata:
          cfn_nag:
            rules_to_suppress:
              - id: W67
                reason: Suppressed to test suppression works and skips this test
          guard:
            SuppressedRules:
              - EC2_NETWORK_ACL_PORT_RANGE_RULE
      OutboundRule:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
           NetworkAclId:
             Ref: MyNACL
           RuleNumber: 100
           Protocol: 58
           Egress: true
           RuleAction: allow
           CidrBlock: 0.0.0.0/0
           Icmp:
             Code: "0"
             Type: "0"
        Metadata:
          cfn_nag:
            rules_to_suppress:
              - id: W67
                reason: Suppressed to test suppression works and skips this test
          guard:
            SuppressedRules:
              - EC2_NETWORK_ACL_PORT_RANGE_RULE
  expectations:
    rules:
      EC2_NETWORK_ACL_PORT_RANGE_RULE: SKIP
