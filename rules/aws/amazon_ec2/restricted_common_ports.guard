## Config Rule Name : restricted-common-ports
## Config Rule URL: https://docs.aws.amazon.com/config/latest/developerguide/restricted-common-ports.html

# Expectations:
# a) SKIP: when there are no Security Groups resource present
# b) PASS: when all Security Groups do no allow any of the restricted common ports
# c) FAIL: when a Security Group allows any of the restricted common ports

#
# Assignments
#
let sgs                     = Resources[ sgs_ids | Type == 'AWS::EC2::SecurityGroup' ]
let egress                  = Resources[ Type == 'AWS::EC2::SecurityGroupEgress' ]
let ingress                 = Resources[ Type == 'AWS::EC2::SecurityGroupIngress' ]

#
# Find all AWS resources that take a reference to SG group
#
let all_sg_ref_resources    = Resources[ 
    Properties {
        SecurityGroupIds exists or 
        SecurityGroups   exists
    } 
]

rule RESTRICTED_INCOMING_TRAFFIC when %sgs !empty {
    %sgs.Properties.SecurityGroupIngress[*]{
        FromPort in [20, 21, 3389, 3306, 4333]
        ToPort in [20, 21, 3389, 3306, 4333]
        IpProtocol exists
        IpProtocol == 'tcp'

        <<
            Violation: Security groups must not allow unrestricted incoming TCP traffic to the specified ports [20, 21, 3389, 3306, 4333].
            Fix: https://docs.aws.amazon.com/config/latest/developerguide/restricted-common-ports.html
        >>
    }
}