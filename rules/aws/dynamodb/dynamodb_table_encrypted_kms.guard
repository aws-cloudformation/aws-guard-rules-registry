## Config Rule Name : dynamodb-table-encrypted-kms
## Config Rule URL: https://docs.aws.amazon.com/config/latest/developerguide/dynamodb-table-encrypted-kms.html"
#####################################
# Rule Identifier:
#    DYNAMODB_TABLE_ENCRYPTED_KMS
#
# Description:
#   Checks if Amazon DynamoDB table is encrypted with AWS Key Management Service (KMS).
#
# Reports on:
#    AWS::DynamoDB::Table
#
# Evaluates:
#    AWS CloudFormation
#
# Rule Parameters:
#    NA
#
# Scenarios:
# a) SKIP: when there are no DynamoDB Tables present
# b) PASS: when all DynamoDB Tables are encrypted with KMS
# c) FAIL: when all DynamoDB Tables are not are encrypted with KMS
# d) SKIP: when metada has rule suppression for DYNAMODB_TABLE_ENCRYPTED_KMS

let aws_dynamodb_table_resources_kms_encrypted = Resources.*[ Type == 'AWS::DynamoDB::Table'
  Metadata.guard.SuppressedRules not exists or
  Metadata.guard.SuppressedRules.* != "DYNAMODB_TABLE_ENCRYPTED_KMS"
]

let aws_dynamodb_table_resources_allowed_algorithms = [ 'KMS' ]

rule DYNAMODB_TABLE_ENCRYPTED_KMS when %aws_dynamodb_table_resources_kms_encrypted !empty {
  %aws_dynamodb_table_resources_kms_encrypted.Properties.SSESpecification exists
  %aws_dynamodb_table_resources_kms_encrypted.Properties.SSESpecification.SSEEnabled == true
  %aws_dynamodb_table_resources_kms_encrypted.Properties.SSESpecification.KMSMasterKeyId exists
  %aws_dynamodb_table_resources_kms_encrypted.Properties.SSESpecification.SSEType == %aws_dynamodb_table_resources_allowed_algorithms
  <<
    Violation: All DynamoDB Tables must have SSE with KMS
    Fix: Set SSEEnabled to true and have KMSMasterKeyId value
  >>
}